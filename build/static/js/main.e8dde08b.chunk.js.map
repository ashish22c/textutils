{"version":3,"sources":["my components/Navbar.js","my components/Alert.js","my components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","cursor","border","defaultProps","aboutText","Alert","alert","class","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","useState","text","setText","color","heading","value","onChange","event","target","rows","backgroundColor","newText","showAlert","split","join","length","trim","App","message","setAlert","setTimeout","setMode","cls","document","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8dde08b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link> */}\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"/navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              <div className=\"bg-info rounded mx-2\" onClick={()=>{props.toggleMode('info')}} style={{height:'30px',width:'30px',cursor:'pointer',border:'2px solid black'}}></div>\r\n              <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px',width:'30px',cursor:'pointer',border:'2px solid black'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px',width:'30px',cursor:'pointer',border:'2px solid black'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px',width:'30px',cursor:'pointer',border:'2px solid black'}}></div>\r\n              <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}} style={{height:'30px',width:'30px',cursor:'pointer',border:'2px solid black'}}></div>\r\n              <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:'30px',width:'30px',cursor:'pointer',border:'2px solid black'}}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps ={\r\n    title: \"set title here\",\r\n    aboutText: \"About text here\"\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n      props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Lowercase converted to uppercase!\",\"success\");\r\n  };\r\n  const handleDownClick = () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Uppercase converted to lowercase!\",\"success\");\r\n  };\r\n  const handleOnClear = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text has been cleared!\",\"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces has been removed!\",\"success\");\r\n  };\r\n  // const handleCopy = () => {\r\n  //   var text = document.getElementById('myBox');\r\n  //   text.select();\r\n  //   navigator.clipboard.writeText(text.value);\r\n  // };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className=\"container\"  style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          style={{color: props.mode==='dark'?'white':'black', backgroundColor: props.mode==='dark'?'rgb(4 1 56)':'white'}}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleDownClick}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleOnClear}>\r\n        Clear text\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n        Handle extra spaces\r\n      </button>\r\n      {/* <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n        Copy text\r\n      </button> */}\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>Your text summary</h1>\r\n      <p>{text.length>0?text.trim().split(\" \").length:0} words and {text.length} characters</p>\r\n      <p>{0.08* text.split(\" \").length} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter the text above to preview it here...\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n}\r\nTextForm.defaultProps = {\r\n    heading: \"Enter Heading Here\"\r\n}\r\n","import \"./App.css\";\nimport React, {useState} from 'react'\nimport Navbar from \"./my components/Navbar\";\nimport Alert from \"./my components/Alert\";\nimport TextForm from \"./my components/TextForm\";\n// import About from \"./my components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const [alert,setAlert] = useState(null);\n  const removeTgl=()=>{\n    document.body.classList.remove('bg-info');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-warning');\n  }\n  const tglMode = (cls) =>{\n    removeTgl();\n    document.body.classList.add('bg-'+cls);\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n    }else{ \n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  }\n  const [mode,setMode] = useState('light');\n  \n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" toggleMode={tglMode} mode={mode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter text above to analyze below\" mode={mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}